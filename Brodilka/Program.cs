/* ЗАДАНИЕ:
 * Создайте иерархию классов и пропишите ключевые методы для компьютерной игры (без
реализации функционала). Суть игры:
• Игрок может передвигаться по прямоугольному полю размером Width на Height;
• На поле располагаются бонусы (яблоко, вишня и т.д.), которые игрок может подобрать для
поднятия каких-либо характеристик;
• За игроком охотятся монстры (волки, медведи и т.д.), которые могут передвигаться по
карте по какому-либо алгоритму;
• На поле располагаются препятствия разных типов (камни, деревья и т.д.), которые игрок и
монстры должны обходить.

Я же буду пробовать с имплементацией :-)
 */

/*
 * Небольшой дневник разработки:
 * 8 августа 2023 года:
 * Объекты создаются и программа запускается
 * Осталось сделать графическое отображение и как-то наладить геймплей
 * Есть задумка записывать карты в виде текстовых файлов, и программа по размерам строк этого файла будет определять размер карты;
 * Но, для простоты пока можно сделать и сериализацией в json-файл;
 * Остались записи созвона с ментором, в котором он набрасывает план по возможному расширению данного задания. План примерно такой:
 *	- сделать консольное приложение
 *  - а затем сделать отдельное wpf приложение, которое будет считывать координаты и вообще всё то, что происходит в игре с консольного приложения
 * через общение через определённый интерфейс: using System.Net.Sockets;
 *
 * Проблема, которую нужно решить на данном этапе:
 *  - Сделать так, чтобы не нужно было засовывать экземпляр карты в каждый gameitem.
 */

/*
 * 16 сентября 2023 года:
 * Сделал чтение карты из файлов практически текстового формата
 * "Нарисовал" карту в текстовом редакторе - map03 - карта из неё читается, игра запускаются, монстры бегают, игрок движется
 * Теперь хочу сделать, чтобы размер карты определялся из этого файла карты
 * Nec сделать, чтобы GameItem не знал о размерах карты, чтобы карта сама следила за тем, чтобы юнит не выходил за пределы карты
 * Nec сделать, чтобы в карте была зона, дойдя до которой игрок или выигрывал или переходил на следующий уровень. Эту зону можно отметить в файле карты специальными символами, например XX или RR. Сама эта зона на игровом поле будет невидимой, но игровой движок должен отрабатывать при каждом движении Игрока, попал он в эту зону или нет.
 * Nec сделать, чтобы юниты двигались по определённой траектории, например по графику трёх- или четырёхлистника. Чтобы сделать это, наверное придётся погрузится в теорию о векторах. Причём, при приближении Игрока монстры должны начинать двигаться в его сторону, и в итоге атаковать его.
 * НСЧ внизу поля отображались параметры игры: имя Игрока, его здоровье, "легенда" карты (P- Игрок, w- волк, B- медведь, и т.д.),  а также другие параметры
 */
namespace Brodilka;

public static class Program
{
	private static void Main()
	{
		var game = new GameProcessor();

		game.Run();
	}
}
